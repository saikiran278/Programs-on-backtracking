#include <stdio.h>

void display(int board[],int N)
{
    for(int i=0;i<N;i++)
    {
        for(int j=0;j<N;j++)
        {
            if(board[j]==i)
                printf("Q%d ",i+1);
                
            else
                printf("# ");
        }
        printf("\n");
    }
}

void revert(int board[],int N)
{
    int i;
    for(i=0;i<N;i++)
        board[i]=-1;
}

int isSafe(int board[],int count,int N,int pos)
{
    if(board[pos]==-1)
    {
        if(pos==0)
        {
            if(board[pos+1]==-1 || (count-board[pos+1]>1 || count-board[pos+1]<-1))
                return 1;
            else
                return 0;
        }
        
        else if(pos==N-1)
        {
            if(board[pos-1]==-1 || (count-board[pos-1]>1 || count-board[pos-1]<-1))
                return 1;
            else
                return 0;
        }
        else
        {
            if(board[pos-1]==-1 && board[pos+1]==-1)
                return 1;
                
            else if(board[pos-1]==-1 && (count-board[pos+1]>1 || count-board[pos+1]<-1))
                return 1;
            
            else if(board[pos+1]==-1 && (count-board[pos-1]>1 || count-board[pos-1]<-1))
                return 1;
                
            else if((count-board[pos+1]>1 || count-board[pos+1]<-1) && (count-board[pos-1]>1 || count-board[pos-1]<-1))
                return 1;
            
            else 
                return 0;
        }
    }
    else
    {
        return 0;
    }
}

int solve(int board[],int count,int N)
{
    if(count==N)
    {
        return 1;
    }
    else
    {
        for(int i=0;i<N;i++)
        {
            if(isSafe(board,count,N,i)==1)
            {
                board[i]=count;
                if(solve(board,count+1,N)==1)
                {
                    return 1;
                }
                else
                {
                    board[i]=-1;
                }
            }
            
        }
        return 0;
    }
}
int main()
{
    int N=16;
    int board[N];
    revert(board,N);
    for(int i=0;i<N;i++)
    {
        board[i]=0;
        if(solve(board,1,N)==1)
        {
            display(board,N);
            printf("\n");
            revert(board,N);
        }
        else
        {
           revert(board,N); 
        }
        
    }
    return 0;
}

